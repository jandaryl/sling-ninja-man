class is SpriteEntity is KeyListener is PointerListener imports motion imports cape imports cave:

var playerSprite as TextureSprite
var scene as BattleScene
var battleScene as BattleScene
var bgWallSprite as BackgroundWallEntity
var leftBottomWallSprite as LeftBottomWallEntity
var corX as double
var corY as double
var moveX as double
var moveY as double
var wallWidth as double
var x as double
var y as double
// var audioManager as AudioManager
// var stream as AudioStream
var playerStandUpEntity as PlayerStandUpEntity
// var isBombPlanted as boolean
// var playerBombEntity as PlayerBombEntity
// var spriteX = 0.0
// var spriteY = 0.0
// var speedX = 0.005
// var speedY = 0.005



func createSprite override as Sprite
{
    battleScene = scene
    bgWallSprite = battleScene.getBackgroundWallEntity()
    leftBottomWallSprite = battleScene.getLeftBottomWall()

    var imgPlayer = scene.createTextureForImageResource("player")

    playerSprite = SpriteUtil.addTextureSpriteForSize(scene, layer, imgPlayer, 0.09 * layer.getReferenceWidth(), 0.09 * layer.getReferenceHeight()) 
	playerSprite.move(bgWallSprite.getWidth() * 0.415 - (playerSprite.getWidth() * 0.5), bgWallSprite.getHeight() * 1.2 - (playerSprite.getHeight() * 0.5))
    
    // wallWidth = 0.6 * layer.getReferenceWidth()
    x = bgWallSprite.getX()
    y = bgWallSprite.getY()

    // audioManager = AudioManager.forApplication(context)


    return(playerSprite)
}

func onPointerEvent(event as PointerEvent) as boolean
{
	if (event.action == PointerEvent.DOWN) {
		
		var corX = event.getX() - (playerSprite.getWidth() * 0.5)
		var corY = event.getY() - (playerSprite.getHeight() * 0.5)
		
		playerSprite.move(corX, corY)
	}

	return false
}

func stopMove
{
    playerSprite.move(playerSprite.getX(), playerSprite.getY())
}

// func isInside(xc as double, yc as double, width as double, height as double) as bool
// {
// 	if x >= xc && x < xc+width && y >= yc && y < yc+height:
// 		return true
// 	return false
// }

// func isInsideInWallBackground
// {
//     isInside(playerSprite.getX(), playerSprite.getY(), layer.getReferenceWidth() * 0.5 - (bgWallSprite.getWidth() * 0.5), layer.getReferenceHeight() * 0.5 - (bgWallSprite.getHeight() * 0.5))
// }

func slashSkillAnimate
{
    layer.removeSprite(playerSprite)
    battleScene.addEntity(playerStandUpEntity = new PlayerStandUpEntity())
    playerStandUpEntity.move(playerSprite.getX(), playerSprite.getY())
    PRINT "The slash skill animate is working from player entity."
}

func isCollide as boolean
{
    if (playerSprite.getX() < bgWallSprite.getX() + (0.6 * layer.getReferenceWidth()) && playerSprite.getX() + playerSprite.getWidth() > bgWallSprite.getX() && playerSprite.getY() < bgWallSprite.getY() + (0.6 * layer.getReferenceHeight()) && playerSprite.getHeight() + playerSprite.getY() > bgWallSprite.getY()) {
        return true
    }
    return false
}

func isCollideToWall as boolean
{
    if (playerSprite.getX() < leftBottomWallSprite.getX() + leftBottomWallSprite.getWidth() && playerSprite.getX() + playerSprite.getWidth() > leftBottomWallSprite.getX() && playerSprite.getY() < leftBottomWallSprite.getY() + leftBottomWallSprite.getHeight() && playerSprite.getHeight() + playerSprite.getY() > leftBottomWallSprite.getY()) {
        return true
        PRINT "Hit the wall"
    }
    return false
}

// func checkCollision
// {
//     if (isCollideToWall) {
//         stopMove()
//     }
// }



func onKeyEvent(event as KeyEvent)
{	
    if (event.isKey(KeyEvent.KEY_SPACE)) {
        
        // if (audioManager != null) {
        //     stream = audioManager.getStreamForResource("main-scene")
            
        //     if (stream != null) {
        //         stream.play()
        //         stream.setLooping(true)
        //         PRINT "[LOG] Slash sound effect from KEY SPACE Button is working"
        //     }
        // }

        slashSkillAnimate()
    }

    
    // if (event.isKey(KeyEvent.KEY_TAB)) {
        
    //     // if (audioManager != null) {
    //     //     stream = audioManager.getStreamForResource("main-scene")
            
    //     //     if (stream != null) {
    //     //         stream.play()
    //     //         stream.setLooping(true)
    //     //         PRINT "[LOG] Bomb sound effect from KEY TAB Button is working"
    //     //     }
    //     // }

    //     isBombPlanted = true
    // }

	if (event.isKey(KeyEvent.KEY_UP)) {

        // if (audioManager != null) {
        //     stream = audioManager.getStreamForResource("main-scene")
            
        //     if (stream != null) {
        //         stream.play()
        //         stream.setLooping(true)
        //         PRINT "[LOG] Walk sound effect from KEY UP Button is working"
        //     }
        // }

        // if (isInsideInWallBackground()) {
        // //    stopMove()
        //     PRINT "Is inside is working!"
        // }

        // else {

        if (isCollide()) {
            playerSprite.move(playerSprite.getX(), playerSprite.getY() - 0.005)
            stats()
            PRINT "It collide to background wall!"
            // checkCollision()
        }  
        else {
            stopMove()
        }

        // }

	}

	if (event.isKey(KeyEvent.KEY_DOWN)) {

        // Add walk sound effect.
        // if (audioManager != null) {
        //     stream = audioManager.getStreamForResource("main-scene")
            
        //     if (stream != null) {
        //         stream.play()
        //         stream.setLooping(true)
        //         PRINT "[LOG] Walk sound effect from KEY DOWN is working"
        //     }
        // }

        if (isCollide()) {
            playerSprite.move(playerSprite.getX(), playerSprite.getY() + 0.005)
            stats()
            PRINT "It collide to background wall!"
            // checkCollision()
        }  
        else {
            stopMove()
        }

	}

	if (event.isKey(KeyEvent.KEY_LEFT)) {

        // Add walk sound effect.
        // if (audioManager != null) {
        //     stream = audioManager.getStreamForResource("main-scene")
            
        //     if (stream != null) {
        //         stream.play()
        //         stream.setLooping(true)
        //         PRINT "[LOG] Walk sound effect from KEY LEFT is working"
        //     }
        // }    
        if (isCollide()) {
            playerSprite.move(playerSprite.getX() - 0.005, playerSprite.getY())
            stats()
            PRINT "It collide to background wall!"
            // checkCollision()
        }  
        else {
            stopMove()
        }
	}

	if (event.isKey(KeyEvent.KEY_RIGHT)) {

        // Add walk sound effect.
        // if (audioManager != null) {
        //     stream = audioManager.getStreamForResource("main-scene")
            
        //     if (stream != null) {
        //         stream.play()
        //         stream.setLooping(true)
        //         PRINT "[LOG] Walk sound effect from KEY RIGHT is working"
        //     }
        // }


        if (isCollide()) {
            playerSprite.move(playerSprite.getX() + 0.005, playerSprite.getY())
            stats()
            PRINT "It collide to background wall!"
            // checkCollision()
        }  
        else {
            stopMove()
        }

  
	}
	else {
		PRINT("Unhandled key event: `" .. event.getStringValue() .. "'")
	}
}


func stats
{
    PRINT("Background Wall Sprite width is - " .. String.asString(wallWidth))
    PRINT("Background Wall Sprite width is - " .. String.asString(bgWallSprite.getWidth()))
    PRINT("Background Wall Sprite height is - " .. String.asString(bgWallSprite.getHeight()))
    PRINT("Background Wall Sprite X is - " .. String.asString(bgWallSprite.getX()))
    PRINT("Background Wall Sprite Y is - " .. String.asString(bgWallSprite.getY()))
    PRINT("Left Bottom Wall Sprite width is - " .. String.asString(leftBottomWallSprite.getWidth()))
    PRINT("Left Bottom Wall Sprite height is - " .. String.asString(leftBottomWallSprite.getHeight()))
    PRINT("Left Bottom Wall Sprite X is - " .. String.asString(leftBottomWallSprite.getX()))
    PRINT("Left Bottom Wall Sprite Y is - " .. String.asString(leftBottomWallSprite.getY()))
    PRINT("Player Sprite width is - " .. String.asString(playerSprite.getWidth()))
    PRINT("Player Sprite height is - " .. String.asString(playerSprite.getHeight()))
    PRINT("Player Sprite X is - " .. String.asString(playerSprite.getX()))
    PRINT("Player Sprite Y is - " .. String.asString(playerSprite.getY()))
    PRINT("Layer Reference Height is - " .. String.asString(layer.getReferenceHeight()))
    PRINT("Layer Reference Width is - " .. String.asString(layer.getReferenceWidth()))
}
