class is SpriteSceneWithEntities imports cape imports cave imports motion #mainScene:

var backgroundMusic as boolean
var audioManager as AudioManager
var stream as AudioStream
var gameTitleProp as TextProperties
var gameTitleSprite as TextSprite
var storyBtnEntity as TextButtonEntity
var startBtnEntity as TextButtonEntity
var helpBtnEntity as TextButtonEntity

func initialize override
{
    base.initialize()

    // Add background music.
    backgroundMusic = false // set true will play the music but consume your memory.
   
    // Add background image.
    addTextureSpriteForSize(createTextureForImageResource("main-scene"), getReferenceWidth(), getReferenceHeight())

    // Add the title of the game.
    gameTitleProp = TextProperties.forText("Ninja Man")
	gameTitleProp.setTextColor(Color.white())
	gameTitleProp.setFontSizeRelative(0.1)
	gameTitleProp.setFontFamily("Fira Code")
	gameTitleProp.setFontIsItalic(true)
	gameTitleSprite = addTextSprite(gameTitleProp)
	gameTitleSprite.setText(gameTitleProp)
	gameTitleSprite.move(getReferenceWidth() * 0.5 - (gameTitleSprite.getWidth() * 0.5), getReferenceHeight() * 0.3 - (gameTitleSprite.getHeight() * 0.5))

    // Add story button.
    storyBtnEntity = TextButtonEntity.forText("Storyline")
    storyBtnEntity.setBackgroundColor(Color.white())
    addEntity(storyBtnEntity)
    storyBtnEntity.move(getReferenceWidth() * 0.5 - (storyBtnEntity.getWidth() * 0.5), getReferenceHeight() * 0.5 - (storyBtnEntity.getHeight() * 0.5))
    storyBtnEntity.setClickHandler(func {
        pushScene(new StorylineScene())
        PRINT "[LOG] Change to Storyline Scene"
    })

    // Add play button.
    startBtnEntity = TextButtonEntity.forText("Start")
    startBtnEntity.setBackgroundColor(Color.white())
    addEntity(startBtnEntity)
    startBtnEntity.move(getReferenceWidth() * 0.5 - (startBtnEntity.getWidth() * 0.5), getReferenceHeight() * 0.6 - (startBtnEntity.getHeight() * 0.5))
    startBtnEntity.setClickHandler(func {
        pushScene(new BattleScene())
        PRINT "[LOG] Change to Battle Scene"
    })
}

func onPointerEvent(event as PointerEvent) override
{
    base.onPointerEvent(event)
}

func playBackGroundMusic
{
    audioManager = AudioManager.forApplication(context)

    if (audioManager != null) {
        stream = audioManager.getStreamForResource("main-scene")
		
		if (stream != null) {
        	stream.play()
        	stream.setLooping(true)
            PRINT "[LOG] Background music is working"
    	}
    }
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)

    if (backgroundMusic == true) {
        playBackGroundMusic()
    }
}

func cleanup override
{
    if (stream != null) {
		stream.stop()
	}
}
