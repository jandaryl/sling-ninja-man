class is SpriteEntity imports motion imports cave imports cape:

var screenWidth as double
var screenHeight as double
var playerSlashMidSprite as TextureSprite
var fadeTimer = 0 as int
var battleScene as BattleScene
var scene as BattleScene
var playerEntity as PlayerEntity
var leftBottomWallSprite as LeftBottomWallEntity

func createSprite override as Sprite
{	
	battleScene = scene

	leftBottomWallSprite = battleScene.getLeftBottomWall()
	playerEntity = battleScene.getPlayerSpriteEntity()

	var monsterImage = scene.createTextureForImageResource("slash-mid")
	screenHeight = layer.getReferenceHeight()
	screenWidth = layer.getReferenceWidth()
	playerSlashMidSprite = SpriteUtil.addTextureSpriteForSize(scene, layer, monsterImage, 0.10 * screenWidth, 0.10 * screenHeight)
	return playerSlashMidSprite
}


func itCollideToWall as boolean
{
    if (playerSlashMidSprite.getX() < leftBottomWallSprite.getX() + leftBottomWallSprite.getWidth() && playerSlashMidSprite.getX() + playerSlashMidSprite.getWidth() > leftBottomWallSprite.getX() && playerSlashMidSprite.getY() < leftBottomWallSprite.getY() + leftBottomWallSprite.getHeight() && playerSlashMidSprite.getHeight() + playerSlashMidSprite.getY() > leftBottomWallSprite.getY()) {
        return true
		PRINT "It collide to the wall!"
    }
    return false
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)

	fadeTimer++
	PRINT("Fade Timer is - " .. String.asString(fadeTimer))

	if (fadeTimer == 10) {
		layer.removeSprite(playerSlashMidSprite)
		battleScene.removeEntity(playerEntity)
		battleScene.addEntity(playerEntity = new PlayerEntity())
  
		if (itCollideToWall()) {
			battleScene.setWallHealth()
		}
		playerEntity.move(playerSlashMidSprite.getX(), playerSlashMidSprite.getY())
		layer.removeSprite(leftBottomWallSprite)
	}

}
